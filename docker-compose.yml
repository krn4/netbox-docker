version: '3.4'
services:
  netbox: &netbox
    image: docker.io/netboxcommunity/netbox:${VERSION-v3.7-2.8.0}
    depends_on:
    - postgres
    - redis
    - redis-cache
    env_file: stack.env
    user: 'unit:root'
    healthcheck:
      retries: 15
      start_period: 60s
      timeout: 3s
      interval: 15s
      test: "curl -f http://localhost:8080/api/ || exit 1"
    volumes:
    - netbox-configuration:/etc/netbox/config:z,ro
    - netbox-reports:/etc/netbox/reports:z,rw
    - netbox-scripts:/etc/netbox/scripts:z,rw
    - netbox-media-files:/opt/netbox/netbox/media:z,rw
  netbox-worker:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    command:
    - /opt/netbox/venv/bin/python
    - /opt/netbox/netbox/manage.py
    - rqworker
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q rqworker || exit 1"
  netbox-housekeeping:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    command:
    - /opt/netbox/housekeeping.sh
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q housekeeping || exit 1"

  # postgres
  postgres:
    image: docker.io/postgres:15-alpine
    env_file: stack.env
    volumes:
    - netbox-postgres-data:/var/lib/postgresql/data

  # redis
  redis:
    image: docker.io/redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: stack.env
    volumes:
    - netbox-redis-data:/data
  redis-cache:
    image: docker.io/redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: stack.env
    volumes:
    - netbox-redis-cache-data:/data

volumes:
  netbox-configuration:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/config"
  netbox-reports:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/reports"
  netbox-scripts:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/scripts"
  netbox-media-files:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/media-files"
  netbox-postgres-data:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/postgres-data"
  netbox-redis-data:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/redis-data"
  netbox-redis-cache-data:
    driver_opts:
            type: "nfs"
            o: "addr=${NFS_HOST},nolock,rw,soft,nfsvers=4"
            device: ":${NFS_PATH}/redis-cache-data"
networks:
    default:
        name: nginxproxymanager_default
        external: true 
